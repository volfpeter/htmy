[tool.poetry]
name = "htmy"
version = "0.8.0"
description = "Async, pure-Python server-side rendering engine."
authors = ["Peter Volf <do.volfp@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
anyio = "^4.6.2.post1"
async-lru = "^2.0.4"
markdown = "^3.8"
lxml = { version = ">=6.0.0", optional = true }

[tool.poetry.extras]
lxml = ["lxml"]

[tool.poetry.group.dev.dependencies]
fastapi = "^0.116.0"
fasthx = "^2.3.3"
mkdocs-material = "^9.6.16"
mkdocstrings = { extras = ["python"], version = "^0.30.0" }
mypy = "^1.17.0"
poethepoet = "^0.37.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-random-order = "^1.1.1"
ruff = "^0.12.0"
types-markdown = "^3.8.0.20250809"
typing-extensions = "^4.12.2"
types-lxml = "^2025.3.30"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
show_error_codes = true

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
addopts = "--random-order"

[tool.ruff]
line-length = 108
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "dist",
    "docs",
]
lint.select = [
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "S", # flake8-bandit - we must ignore these rules in tests
    "W", # pycodestyle warnings
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101"] # S101: use of assert detected

[tool.poe.tasks]
check-format = "ruff format --check ."
format = "ruff format ."
lint = "ruff check ."
lint-fix = "ruff . --fix"
mypy = "mypy ."
test = "python -m pytest tests"
static-checks.sequence = ["lint", "check-format", "mypy"]
static-checks.ignore_fail = "return_non_zero"
serve-docs = "mkdocs serve"
